# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: continuumio/miniconda3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout

      # install conda dependencies
      - restore_cache:
          keys:
            - v6-dependencies-{{ checksum "environment.yml" }}-{{ checksum "setup.py" }}
            # fallback to using the latest cache if no exact match is found
            - v6-dependencies-

      - run:
          name: install dependencies
          command: |
            apt-get update --fix-missing;
            apt-get install -y gcc rename;
            apt-get clean;

            if [ ! -d /opt/conda/envs/amplimap/ ]; then
              conda env create --force --file environment.yml
              conda install -y -n amplimap pytest octopus  # we also need pytest and octopus
            fi

            # activate
            . /opt/conda/etc/profile.d/conda.sh;
            conda activate amplimap;
            # uninstall conda version
            # temporarily added snakemake here to work around version issue
            pip uninstall -y amplimap snakemake
            # install current version
            easy_install .;

      - save_cache:
          paths:
            - /opt/conda/
            - /root/.conda/
          key: v6-dependencies-{{ checksum "environment.yml" }}-{{ checksum "setup.py" }}

      # reference genome
      - restore_cache:
          keys:
            - reference-genome-v4
            - reference-genome-v3
            - reference-genome-v2
            - reference-genome-v1

      - run:
          name: prepare reference genome
          command: |
            . /opt/conda/etc/profile.d/conda.sh;
            conda activate amplimap;

            mkdir -p /root/refs/ || true;
            ls -la /root/refs/;

            echo "Checking for reference genome..."
            if [ ! -f /root/refs/hg19.fa ]; then
              echo "Downloading reference..."
              wget -O /root/refs/hg19.zip ftp://ftp.ccb.jhu.edu/pub/data/bowtie2_indexes/hg19.zip
              ls -la /root/refs/;

              echo "Unzipping..."
              apt-get update --fix-missing;
              apt-get install -y unzip;
              apt-get clean;
              unzip /root/refs/hg19.zip -d /root/refs/;
              ls -la /root/refs/;
            fi

            if [ ! -f /root/refs/hg19.fa.1.bt2 ]; then
              echo "Renaming..."
              rename 's/hg19/hg19.fa/' /root/refs/hg19*bt2;
              ls -la /root/refs/;
            fi

            if [ ! -f /root/refs/hg19.fa ]; then
              echo "Creating FASTA..."
              bowtie2-inspect /root/refs/hg19.fa > /root/refs/hg19.fa;
              ls -la /root/refs/;
            fi

            if [ -f /root/refs/hg19.zip ]; then
              echo "Removing old ZIP"
              rm -f /root/refs/hg19.zip;
            fi

            if [ ! -f /root/refs/hg19.fa.fai ]; then
              echo "Indexing reference..."
              samtools faidx /root/refs/hg19.fa;
              ls -la /root/refs/;
            fi

            if [ ! -f /root/refs/hg19.dict ]; then
              echo "Generating dict..."
              picard CreateSequenceDictionary R=/root/refs/hg19.fa;
              ls -la /root/refs/;
            fi

            conda deactivate;

      - save_cache:
          paths:
            - /root/refs/
          key: reference-genome-v4

      # run general tests
      - run:
          name: run tests
          command: |
            . /opt/conda/etc/profile.d/conda.sh;
            conda activate amplimap;

            mkdir -p test-reports/general/ || true;
            conda list > test-reports/general/conda.txt;
            pip freeze > test-reports/general/pip.txt;

            pytest --junitxml=test-reports/general/junit.xml tests/;

            conda deactivate;

      # run tutorials
      - run:
          name: run fgfr2
          command: |
            . /opt/conda/etc/profile.d/conda.sh;
            conda activate amplimap;

            mkdir -p /wd/fgfr2;
            cd /wd/fgfr2;
            wget http://userweb.molbiol.ox.ac.uk/public/koelling/amplimap/tutorial_data/FGFR2.tar;
            tar xf FGFR2.tar;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/FGFR2/config.yaml;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/FGFR2/probes_mipgen.csv;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/FGFR2/targets.csv;

            amplimap --version;
            amplimap pileups --run;

            conda deactivate;
      - store_artifacts:
          path: /wd/fgfr2/analysis/reads_parsed/stats_reads.csv
          destination: fgfr2_reads.csv
      - store_artifacts:
          path: /wd/fgfr2/analysis/pileups/pileups_long_detailed.csv
          destination: fgfr2_pileups.csv

      - run:
          name: run tlk2
          command: |
            . /opt/conda/etc/profile.d/conda.sh;
            conda activate amplimap;

            mkdir -p /wd/tlk2;
            cd /wd/tlk2;
            wget http://userweb.molbiol.ox.ac.uk/public/koelling/amplimap/tutorial_data/TLK2.tar;
            tar xf TLK2.tar;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/TLK2/config.yaml;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/TLK2/probes.csv;
            wget https://raw.githubusercontent.com/koelling/amplimap/master/tutorials/TLK2/targets.csv;

            amplimap --version;
            amplimap variants coverages --run;

            conda deactivate;
      - store_artifacts:
          path: /wd/tlk2/analysis/reads_parsed/stats_reads.csv
          destination: tlk2_reads.csv
      - store_artifacts:
          path: /wd/tlk2/analysis/variants_raw/variants_summary.csv
          destination: tlk2_variants.csv

      # save test results
      - store_artifacts:
          path: test-reports
          destination: test-reports

      - store_test_results:
          path: test-reports
